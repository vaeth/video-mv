#!/usr/bin/env sh
# (C) Martin V\"ath <martin at mvath.de>
# SPDX-License-Identifier: BSD-3-Clause
set -u
. _videoscript.sh

case ${0##*/} in
*ff*|*av*)
	modus='ffmpeg';;
*)
	modus='mplayer';;
esac

Usage() {
	Echo \
"Usage: ${0##*/} [options] PATH [video.$modus options]
Records video PATH at the given time and duration.

TIME must be understood by the 'date' utility. Examples:

LEN   hh:mm:ss  (hh=hour, mm=minute, ss=second)
LEN may be - or 0 or empty: In that case, LEN is assumed to be infinity;
in this case you must stop manually, e.g. with Ctrl-C.

All additional arguments are passed as options to the video script.
Typical examples are:
-d-20   Darker by 20
-f      Force overwriting existing file
-g      No ODML headers

The following options are available:
-e LEN  Stop after given timeout, using video.$modus -eLEN
        A typical format for LEN is hh:mm:ss
-t LEN  Same as -e LEN
-s TIME Start at TIME. Examples for TIME:
        now
        23:59
        23:59:59 31 Dec 2012 (do not forget quoting from the shell)
-I CH   Use input channel CH (- for none), using video.$modus -ICH
-q      Be quiet
-V      Be not very verbose
-p -n   Output only command(s) but do not execute something
-c PRE  Eval PRE before calling video.$modus.
-M      Same as -c 'mediaclient.video -c external'
-x PROG Use PROG instead of video.$modus
-T[pPfHsS-] pass option(s) to the title script; - means no title"
	exit ${1:-1}
}

# Default options

verbose=:
quiet=
titleopt=
showonly=false
prog=video.$modus
time=
len=
precmd=
channel=

# Parse options

while getopts 'Mc:pns:e:t:I:qVx:T:h' opt
do	case $opt in
	[pn])	showonly=:;;
	q)	quiet='-q';;
	s)	time=$OPTARG;;
	[et])	len=$OPTARG;;
	I)	channel=$OPTARG;;
	x)	prog=$OPTARG;;
	V)	verbose=false;;
	T)	titleopt=$titleopt$OPTARG;;
	M)	precmd='mediaclient.video -c external';;
	c)	precmd=$OPTARG;;
	'?')	exit 1;;
	*)	Usage 0;;
	esac
done
shift $(( $OPTIND -1 ))
[ $# -ge 1 ] || Usage

# Interpret parameters

case $titleopt in
*[!pPfHsS-]*)
	 Fatal 'illegal -T argument';;
esac

name=${1##*/}
srcdir=${1%/*}
[ x"$srcdir" = x"$1" ] && srcdir=$PWD
[ -n "$srcdir" ] && test -d "$srcdir" || "nonexistent directory $srcdir"
shift

MyCd() {
	$verbose && Echo "cd $1"
	cd "$1" >/dev/null 2>&1 || Fatal "cannot cd to $1"
}

EarlyReturn() {
	Message 'stopping due to signal or error'
	exit 1
}

# main function

DoRecord() {
	MyCd "$srcdir"
	if [ -n "$time" ]
	then	MyExec sleepto $quiet ${titleopt:+"-T$titleopt"} "$time" \
			|| EarlyReturn
	fi
	$verbose && MyExec date
	[ -z "$precmd" ] || eval "MyExec $precmd"
	MyExec "$prog" $quiet ${len:+"-e$len"} ${channel:+"-I$channel"} \
		${titleopt:+"-T$titleopt"} ${1+"$@"} "$name"
	rstat=$?
}

$verbose && MyExec date
DoRecord ${1+"$@"}
$verbose && MyExec date
Exit $rstat
